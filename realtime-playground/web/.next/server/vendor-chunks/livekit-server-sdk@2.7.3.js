"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/livekit-server-sdk@2.7.3";
exports.ids = ["vendor-chunks/livekit-server-sdk@2.7.3"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/AccessToken.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/AccessToken.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessToken: () => (/* binding */ AccessToken),\n/* harmony export */   TokenVerifier: () => (/* binding */ TokenVerifier)\n/* harmony export */ });\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/.pnpm/jose@5.9.6/node_modules/jose/dist/node/esm/jwt/sign.js\");\n/* harmony import */ var jose__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! jose */ \"(rsc)/./node_modules/.pnpm/jose@5.9.6/node_modules/jose/dist/node/esm/jwt/verify.js\");\n/* harmony import */ var _grants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./grants.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/grants.js\");\n// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\n\n\n// 6 hours\nconst defaultTTL = `6h`;\nclass AccessToken {\n    /**\n     * Creates a new AccessToken\n     * @param apiKey - API Key, can be set in env LIVEKIT_API_KEY\n     * @param apiSecret - Secret, can be set in env LIVEKIT_API_SECRET\n     */\n    constructor(apiKey, apiSecret, options) {\n        if (!apiKey) {\n            apiKey = process.env.LIVEKIT_API_KEY;\n        }\n        if (!apiSecret) {\n            apiSecret = process.env.LIVEKIT_API_SECRET;\n        }\n        if (!apiKey || !apiSecret) {\n            throw Error('api-key and api-secret must be set');\n        }\n        else if (typeof document !== 'undefined') {\n            // check against document rather than window because deno provides window\n            console.error('You should not include your API secret in your web client bundle.\\n\\n' +\n                'Your web client should request a token from your backend server which should then use ' +\n                'the API secret to generate a token. See https://docs.livekit.io/client/connect/');\n        }\n        this.apiKey = apiKey;\n        this.apiSecret = apiSecret;\n        this.grants = {};\n        this.identity = options === null || options === void 0 ? void 0 : options.identity;\n        this.ttl = (options === null || options === void 0 ? void 0 : options.ttl) || defaultTTL;\n        if (typeof this.ttl === 'number') {\n            this.ttl = `${this.ttl}s`;\n        }\n        if (options === null || options === void 0 ? void 0 : options.metadata) {\n            this.metadata = options.metadata;\n        }\n        if (options === null || options === void 0 ? void 0 : options.name) {\n            this.name = options.name;\n        }\n    }\n    /**\n     * Adds a video grant to this token.\n     * @param grant -\n     */\n    addGrant(grant) {\n        var _a;\n        this.grants.video = Object.assign(Object.assign({}, ((_a = this.grants.video) !== null && _a !== void 0 ? _a : {})), grant);\n    }\n    /**\n     * Adds a SIP grant to this token.\n     * @param grant -\n     */\n    addSIPGrant(grant) {\n        var _a;\n        this.grants.sip = Object.assign(Object.assign({}, ((_a = this.grants.sip) !== null && _a !== void 0 ? _a : {})), grant);\n    }\n    get name() {\n        return this.grants.name;\n    }\n    set name(name) {\n        this.grants.name = name;\n    }\n    get metadata() {\n        return this.grants.metadata;\n    }\n    /**\n     * Set metadata to be passed to the Participant, used only when joining the room\n     */\n    set metadata(md) {\n        this.grants.metadata = md;\n    }\n    get attributes() {\n        return this.grants.attributes;\n    }\n    set attributes(attrs) {\n        this.grants.attributes = attrs;\n    }\n    get kind() {\n        return this.grants.kind;\n    }\n    set kind(kind) {\n        this.grants.kind = kind;\n    }\n    get sha256() {\n        return this.grants.sha256;\n    }\n    set sha256(sha) {\n        this.grants.sha256 = sha;\n    }\n    /**\n     * @returns JWT encoded token\n     */\n    async toJwt() {\n        // TODO: check for video grant validity\n        var _a;\n        const secret = new TextEncoder().encode(this.apiSecret);\n        const jwt = new jose__WEBPACK_IMPORTED_MODULE_1__.SignJWT((0,_grants_js__WEBPACK_IMPORTED_MODULE_0__.claimsToJwtPayload)(this.grants))\n            .setProtectedHeader({ alg: 'HS256' })\n            .setIssuer(this.apiKey)\n            .setExpirationTime(this.ttl)\n            .setNotBefore(0);\n        if (this.identity) {\n            jwt.setSubject(this.identity);\n        }\n        else if ((_a = this.grants.video) === null || _a === void 0 ? void 0 : _a.roomJoin) {\n            throw Error('identity is required for join but not set');\n        }\n        return jwt.sign(secret);\n    }\n}\nclass TokenVerifier {\n    constructor(apiKey, apiSecret) {\n        this.apiKey = apiKey;\n        this.apiSecret = apiSecret;\n    }\n    async verify(token) {\n        const secret = new TextEncoder().encode(this.apiSecret);\n        const { payload } = await jose__WEBPACK_IMPORTED_MODULE_2__.jwtVerify(token, secret, { issuer: this.apiKey });\n        if (!payload) {\n            throw Error('invalid token');\n        }\n        return payload;\n    }\n}\n//# sourceMappingURL=AccessToken.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuNy4zL25vZGVfbW9kdWxlcy9saXZla2l0LXNlcnZlci1zZGsvZGlzdC9BY2Nlc3NUb2tlbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUM2QjtBQUNvQjtBQUNqRDtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsU0FBUztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBELCtEQUErRDtBQUN6SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCw2REFBNkQ7QUFDckg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5Q0FBWSxDQUFDLDhEQUFrQjtBQUN2RCxrQ0FBa0MsY0FBYztBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixVQUFVLFFBQVEsMkNBQWMsa0JBQWtCLHFCQUFxQjtBQUN2RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3BsYXlncm91bmQvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuNy4zL25vZGVfbW9kdWxlcy9saXZla2l0LXNlcnZlci1zZGsvZGlzdC9BY2Nlc3NUb2tlbi5qcz8yOWU3Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjQgTGl2ZUtpdCwgSW5jLlxuLy9cbi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG5pbXBvcnQgKiBhcyBqb3NlIGZyb20gJ2pvc2UnO1xuaW1wb3J0IHsgY2xhaW1zVG9Kd3RQYXlsb2FkIH0gZnJvbSAnLi9ncmFudHMuanMnO1xuLy8gNiBob3Vyc1xuY29uc3QgZGVmYXVsdFRUTCA9IGA2aGA7XG5leHBvcnQgY2xhc3MgQWNjZXNzVG9rZW4ge1xuICAgIC8qKlxuICAgICAqIENyZWF0ZXMgYSBuZXcgQWNjZXNzVG9rZW5cbiAgICAgKiBAcGFyYW0gYXBpS2V5IC0gQVBJIEtleSwgY2FuIGJlIHNldCBpbiBlbnYgTElWRUtJVF9BUElfS0VZXG4gICAgICogQHBhcmFtIGFwaVNlY3JldCAtIFNlY3JldCwgY2FuIGJlIHNldCBpbiBlbnYgTElWRUtJVF9BUElfU0VDUkVUXG4gICAgICovXG4gICAgY29uc3RydWN0b3IoYXBpS2V5LCBhcGlTZWNyZXQsIG9wdGlvbnMpIHtcbiAgICAgICAgaWYgKCFhcGlLZXkpIHtcbiAgICAgICAgICAgIGFwaUtleSA9IHByb2Nlc3MuZW52LkxJVkVLSVRfQVBJX0tFWTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWFwaVNlY3JldCkge1xuICAgICAgICAgICAgYXBpU2VjcmV0ID0gcHJvY2Vzcy5lbnYuTElWRUtJVF9BUElfU0VDUkVUO1xuICAgICAgICB9XG4gICAgICAgIGlmICghYXBpS2V5IHx8ICFhcGlTZWNyZXQpIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKCdhcGkta2V5IGFuZCBhcGktc2VjcmV0IG11c3QgYmUgc2V0Jyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAodHlwZW9mIGRvY3VtZW50ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgLy8gY2hlY2sgYWdhaW5zdCBkb2N1bWVudCByYXRoZXIgdGhhbiB3aW5kb3cgYmVjYXVzZSBkZW5vIHByb3ZpZGVzIHdpbmRvd1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcignWW91IHNob3VsZCBub3QgaW5jbHVkZSB5b3VyIEFQSSBzZWNyZXQgaW4geW91ciB3ZWIgY2xpZW50IGJ1bmRsZS5cXG5cXG4nICtcbiAgICAgICAgICAgICAgICAnWW91ciB3ZWIgY2xpZW50IHNob3VsZCByZXF1ZXN0IGEgdG9rZW4gZnJvbSB5b3VyIGJhY2tlbmQgc2VydmVyIHdoaWNoIHNob3VsZCB0aGVuIHVzZSAnICtcbiAgICAgICAgICAgICAgICAndGhlIEFQSSBzZWNyZXQgdG8gZ2VuZXJhdGUgYSB0b2tlbi4gU2VlIGh0dHBzOi8vZG9jcy5saXZla2l0LmlvL2NsaWVudC9jb25uZWN0LycpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuYXBpS2V5ID0gYXBpS2V5O1xuICAgICAgICB0aGlzLmFwaVNlY3JldCA9IGFwaVNlY3JldDtcbiAgICAgICAgdGhpcy5ncmFudHMgPSB7fTtcbiAgICAgICAgdGhpcy5pZGVudGl0eSA9IG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5pZGVudGl0eTtcbiAgICAgICAgdGhpcy50dGwgPSAob3B0aW9ucyA9PT0gbnVsbCB8fCBvcHRpb25zID09PSB2b2lkIDAgPyB2b2lkIDAgOiBvcHRpb25zLnR0bCkgfHwgZGVmYXVsdFRUTDtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnR0bCA9PT0gJ251bWJlcicpIHtcbiAgICAgICAgICAgIHRoaXMudHRsID0gYCR7dGhpcy50dGx9c2A7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5tZXRhZGF0YSkge1xuICAgICAgICAgICAgdGhpcy5tZXRhZGF0YSA9IG9wdGlvbnMubWV0YWRhdGE7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKG9wdGlvbnMgPT09IG51bGwgfHwgb3B0aW9ucyA9PT0gdm9pZCAwID8gdm9pZCAwIDogb3B0aW9ucy5uYW1lKSB7XG4gICAgICAgICAgICB0aGlzLm5hbWUgPSBvcHRpb25zLm5hbWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkcyBhIHZpZGVvIGdyYW50IHRvIHRoaXMgdG9rZW4uXG4gICAgICogQHBhcmFtIGdyYW50IC1cbiAgICAgKi9cbiAgICBhZGRHcmFudChncmFudCkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHRoaXMuZ3JhbnRzLnZpZGVvID0gT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCAoKF9hID0gdGhpcy5ncmFudHMudmlkZW8pICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHt9KSksIGdyYW50KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQWRkcyBhIFNJUCBncmFudCB0byB0aGlzIHRva2VuLlxuICAgICAqIEBwYXJhbSBncmFudCAtXG4gICAgICovXG4gICAgYWRkU0lQR3JhbnQoZ3JhbnQpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICB0aGlzLmdyYW50cy5zaXAgPSBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sICgoX2EgPSB0aGlzLmdyYW50cy5zaXApICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IHt9KSksIGdyYW50KTtcbiAgICB9XG4gICAgZ2V0IG5hbWUoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdyYW50cy5uYW1lO1xuICAgIH1cbiAgICBzZXQgbmFtZShuYW1lKSB7XG4gICAgICAgIHRoaXMuZ3JhbnRzLm5hbWUgPSBuYW1lO1xuICAgIH1cbiAgICBnZXQgbWV0YWRhdGEoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdyYW50cy5tZXRhZGF0YTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0IG1ldGFkYXRhIHRvIGJlIHBhc3NlZCB0byB0aGUgUGFydGljaXBhbnQsIHVzZWQgb25seSB3aGVuIGpvaW5pbmcgdGhlIHJvb21cbiAgICAgKi9cbiAgICBzZXQgbWV0YWRhdGEobWQpIHtcbiAgICAgICAgdGhpcy5ncmFudHMubWV0YWRhdGEgPSBtZDtcbiAgICB9XG4gICAgZ2V0IGF0dHJpYnV0ZXMoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLmdyYW50cy5hdHRyaWJ1dGVzO1xuICAgIH1cbiAgICBzZXQgYXR0cmlidXRlcyhhdHRycykge1xuICAgICAgICB0aGlzLmdyYW50cy5hdHRyaWJ1dGVzID0gYXR0cnM7XG4gICAgfVxuICAgIGdldCBraW5kKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5ncmFudHMua2luZDtcbiAgICB9XG4gICAgc2V0IGtpbmQoa2luZCkge1xuICAgICAgICB0aGlzLmdyYW50cy5raW5kID0ga2luZDtcbiAgICB9XG4gICAgZ2V0IHNoYTI1NigpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZ3JhbnRzLnNoYTI1NjtcbiAgICB9XG4gICAgc2V0IHNoYTI1NihzaGEpIHtcbiAgICAgICAgdGhpcy5ncmFudHMuc2hhMjU2ID0gc2hhO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcmV0dXJucyBKV1QgZW5jb2RlZCB0b2tlblxuICAgICAqL1xuICAgIGFzeW5jIHRvSnd0KCkge1xuICAgICAgICAvLyBUT0RPOiBjaGVjayBmb3IgdmlkZW8gZ3JhbnQgdmFsaWRpdHlcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICBjb25zdCBzZWNyZXQgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUodGhpcy5hcGlTZWNyZXQpO1xuICAgICAgICBjb25zdCBqd3QgPSBuZXcgam9zZS5TaWduSldUKGNsYWltc1RvSnd0UGF5bG9hZCh0aGlzLmdyYW50cykpXG4gICAgICAgICAgICAuc2V0UHJvdGVjdGVkSGVhZGVyKHsgYWxnOiAnSFMyNTYnIH0pXG4gICAgICAgICAgICAuc2V0SXNzdWVyKHRoaXMuYXBpS2V5KVxuICAgICAgICAgICAgLnNldEV4cGlyYXRpb25UaW1lKHRoaXMudHRsKVxuICAgICAgICAgICAgLnNldE5vdEJlZm9yZSgwKTtcbiAgICAgICAgaWYgKHRoaXMuaWRlbnRpdHkpIHtcbiAgICAgICAgICAgIGp3dC5zZXRTdWJqZWN0KHRoaXMuaWRlbnRpdHkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKChfYSA9IHRoaXMuZ3JhbnRzLnZpZGVvKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Eucm9vbUpvaW4pIHtcbiAgICAgICAgICAgIHRocm93IEVycm9yKCdpZGVudGl0eSBpcyByZXF1aXJlZCBmb3Igam9pbiBidXQgbm90IHNldCcpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBqd3Quc2lnbihzZWNyZXQpO1xuICAgIH1cbn1cbmV4cG9ydCBjbGFzcyBUb2tlblZlcmlmaWVyIHtcbiAgICBjb25zdHJ1Y3RvcihhcGlLZXksIGFwaVNlY3JldCkge1xuICAgICAgICB0aGlzLmFwaUtleSA9IGFwaUtleTtcbiAgICAgICAgdGhpcy5hcGlTZWNyZXQgPSBhcGlTZWNyZXQ7XG4gICAgfVxuICAgIGFzeW5jIHZlcmlmeSh0b2tlbikge1xuICAgICAgICBjb25zdCBzZWNyZXQgPSBuZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUodGhpcy5hcGlTZWNyZXQpO1xuICAgICAgICBjb25zdCB7IHBheWxvYWQgfSA9IGF3YWl0IGpvc2Uuand0VmVyaWZ5KHRva2VuLCBzZWNyZXQsIHsgaXNzdWVyOiB0aGlzLmFwaUtleSB9KTtcbiAgICAgICAgaWYgKCFwYXlsb2FkKSB7XG4gICAgICAgICAgICB0aHJvdyBFcnJvcignaW52YWxpZCB0b2tlbicpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBwYXlsb2FkO1xuICAgIH1cbn1cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUFjY2Vzc1Rva2VuLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/AccessToken.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/EgressClient.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/EgressClient.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EgressClient: () => (/* binding */ EgressClient)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/.pnpm/@livekit+protocol@1.27.1/node_modules/@livekit/protocol/src/index.js\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n\n\n\nconst svc = 'Egress';\n/**\n * Client to access Egress APIs\n */\nclass EgressClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    /**\n     * @param host - hostname including protocol. i.e. 'https://cluster.livekit.io'\n     * @param apiKey - API Key, can be set in env var LIVEKIT_API_KEY\n     * @param secret - API Secret, can be set in env var LIVEKIT_API_SECRET\n     */\n    constructor(host, apiKey, secret) {\n        super(apiKey, secret);\n        this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n    }\n    async startRoomCompositeEgress(roomName, output, optsOrLayout, options, audioOnly, videoOnly, customBaseUrl) {\n        let layout;\n        if (optsOrLayout !== undefined) {\n            if (typeof optsOrLayout === 'string') {\n                layout = optsOrLayout;\n            }\n            else {\n                const opts = optsOrLayout;\n                layout = opts.layout;\n                options = opts.encodingOptions;\n                audioOnly = opts.audioOnly;\n                videoOnly = opts.videoOnly;\n                customBaseUrl = opts.customBaseUrl;\n            }\n        }\n        layout !== null && layout !== void 0 ? layout : (layout = '');\n        audioOnly !== null && audioOnly !== void 0 ? audioOnly : (audioOnly = false);\n        videoOnly !== null && videoOnly !== void 0 ? videoOnly : (videoOnly = false);\n        customBaseUrl !== null && customBaseUrl !== void 0 ? customBaseUrl : (customBaseUrl = '');\n        const { output: legacyOutput, options: egressOptions, fileOutputs, streamOutputs, segmentOutputs, imageOutputs, } = this.getOutputParams(output, options);\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomCompositeEgressRequest({\n            roomName,\n            layout,\n            audioOnly,\n            videoOnly,\n            customBaseUrl,\n            output: legacyOutput,\n            options: egressOptions,\n            fileOutputs,\n            streamOutputs,\n            segmentOutputs,\n            imageOutputs,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'StartRoomCompositeEgress', req, await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param url - url\n     * @param output - file or stream output\n     * @param opts - WebOptions\n     */\n    async startWebEgress(url, output, opts) {\n        const audioOnly = (opts === null || opts === void 0 ? void 0 : opts.audioOnly) || false;\n        const videoOnly = (opts === null || opts === void 0 ? void 0 : opts.videoOnly) || false;\n        const awaitStartSignal = (opts === null || opts === void 0 ? void 0 : opts.awaitStartSignal) || false;\n        const { output: legacyOutput, options, fileOutputs, streamOutputs, segmentOutputs, imageOutputs, } = this.getOutputParams(output, opts === null || opts === void 0 ? void 0 : opts.encodingOptions);\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.WebEgressRequest({\n            url,\n            audioOnly,\n            videoOnly,\n            awaitStartSignal,\n            output: legacyOutput,\n            options,\n            fileOutputs,\n            streamOutputs,\n            segmentOutputs,\n            imageOutputs,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'StartWebEgress', req, await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * Export a participant's audio and video tracks,\n     *\n     * @param roomName - room name\n     * @param output - one or more outputs\n     * @param opts - ParticipantEgressOptions\n     */\n    async startParticipantEgress(roomName, identity, output, opts) {\n        const { options, fileOutputs, streamOutputs, segmentOutputs, imageOutputs } = this.getOutputParams(output, opts === null || opts === void 0 ? void 0 : opts.encodingOptions);\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantEgressRequest({\n            roomName,\n            identity,\n            options,\n            fileOutputs,\n            streamOutputs,\n            segmentOutputs,\n            imageOutputs,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'StartParticipantEgress', req, await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    async startTrackCompositeEgress(roomName, output, optsOrAudioTrackId, videoTrackId, options) {\n        let audioTrackId;\n        if (optsOrAudioTrackId !== undefined) {\n            if (typeof optsOrAudioTrackId === 'string') {\n                audioTrackId = optsOrAudioTrackId;\n            }\n            else {\n                const opts = optsOrAudioTrackId;\n                audioTrackId = opts.audioTrackId;\n                videoTrackId = opts.videoTrackId;\n                options = opts.encodingOptions;\n            }\n        }\n        audioTrackId !== null && audioTrackId !== void 0 ? audioTrackId : (audioTrackId = '');\n        videoTrackId !== null && videoTrackId !== void 0 ? videoTrackId : (videoTrackId = '');\n        const { output: legacyOutput, options: egressOptions, fileOutputs, streamOutputs, segmentOutputs, imageOutputs, } = this.getOutputParams(output, options);\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackCompositeEgressRequest({\n            roomName,\n            audioTrackId,\n            videoTrackId,\n            output: legacyOutput,\n            options: egressOptions,\n            fileOutputs,\n            streamOutputs,\n            segmentOutputs,\n            imageOutputs,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'StartTrackCompositeEgress', req, await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isEncodedOutputs(output) {\n        return (output.file !== undefined ||\n            output.stream !== undefined ||\n            output.segments !== undefined);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isEncodedFileOutput(output) {\n        return (output.filepath !== undefined ||\n            output.fileType !== undefined);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isSegmentedFileOutput(output) {\n        return (output.filenamePrefix !== undefined ||\n            output.playlistName !== undefined ||\n            output.filenameSuffix !== undefined);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    isStreamOutput(output) {\n        return (output.protocol !== undefined || output.urls !== undefined);\n    }\n    getOutputParams(output, opts) {\n        let file;\n        let fileOutputs;\n        let stream;\n        let streamOutputs;\n        let segments;\n        let segmentOutputs;\n        let imageOutputs;\n        if (this.isEncodedOutputs(output)) {\n            if (output.file !== undefined) {\n                fileOutputs = [output.file];\n            }\n            if (output.stream !== undefined) {\n                streamOutputs = [output.stream];\n            }\n            if (output.segments !== undefined) {\n                segmentOutputs = [output.segments];\n            }\n            if (output.images !== undefined) {\n                imageOutputs = [output.images];\n            }\n        }\n        else if (this.isEncodedFileOutput(output)) {\n            file = output;\n            fileOutputs = [file];\n        }\n        else if (this.isSegmentedFileOutput(output)) {\n            segments = output;\n            segmentOutputs = [segments];\n        }\n        else if (this.isStreamOutput(output)) {\n            stream = output;\n            streamOutputs = [stream];\n        }\n        let legacyOutput;\n        if (file) {\n            legacyOutput = {\n                case: 'file',\n                value: file,\n            };\n        }\n        else if (stream) {\n            legacyOutput = {\n                case: 'stream',\n                value: stream,\n            };\n        }\n        else if (segments) {\n            legacyOutput = {\n                case: 'segments',\n                value: segments,\n            };\n        }\n        let egressOptions;\n        if (opts) {\n            if (typeof opts === 'number') {\n                egressOptions = {\n                    case: 'preset',\n                    value: opts,\n                };\n            }\n            else {\n                egressOptions = {\n                    case: 'advanced',\n                    value: opts,\n                };\n            }\n        }\n        return {\n            output: legacyOutput,\n            options: egressOptions,\n            fileOutputs,\n            streamOutputs,\n            segmentOutputs,\n            imageOutputs,\n        };\n    }\n    /**\n     * @param roomName - room name\n     * @param output - file or websocket output\n     * @param trackId - track Id\n     */\n    async startTrackEgress(roomName, output, trackId) {\n        let legacyOutput;\n        if (typeof output === 'string') {\n            legacyOutput = {\n                case: 'websocketUrl',\n                value: output,\n            };\n        }\n        else {\n            legacyOutput = {\n                case: 'file',\n                value: output,\n            };\n        }\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackEgressRequest({\n            roomName,\n            trackId,\n            output: legacyOutput,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'StartTrackEgress', req, await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param egressId -\n     * @param layout -\n     */\n    async updateLayout(egressId, layout) {\n        const data = await this.rpc.request(svc, 'UpdateLayout', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateLayoutRequest({ egressId, layout }).toJson(), await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param egressId -\n     * @param addOutputUrls -\n     * @param removeOutputUrls -\n     */\n    async updateStream(egressId, addOutputUrls, removeOutputUrls) {\n        addOutputUrls !== null && addOutputUrls !== void 0 ? addOutputUrls : (addOutputUrls = []);\n        removeOutputUrls !== null && removeOutputUrls !== void 0 ? removeOutputUrls : (removeOutputUrls = []);\n        const data = await this.rpc.request(svc, 'UpdateStream', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateStreamRequest({ egressId, addOutputUrls, removeOutputUrls }).toJson(), await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param roomName - list egress for one room only\n     */\n    async listEgress(options) {\n        var _a;\n        let req = {};\n        if (typeof options === 'string') {\n            req.roomName = options;\n        }\n        else if (options !== undefined) {\n            req = options;\n        }\n        const data = await this.rpc.request(svc, 'ListEgress', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListEgressRequest(req).toJson(), await this.authHeader({ roomRecord: true }));\n        return (_a = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListEgressResponse.fromJson(data, { ignoreUnknownFields: true }).items) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * @param egressId -\n     */\n    async stopEgress(egressId) {\n        const data = await this.rpc.request(svc, 'StopEgress', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.StopEgressRequest({ egressId }).toJson(), await this.authHeader({ roomRecord: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n}\n//# sourceMappingURL=EgressClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/EgressClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/IngressClient.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/IngressClient.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IngressClient: () => (/* binding */ IngressClient)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/.pnpm/@livekit+protocol@1.27.1/node_modules/@livekit/protocol/src/index.js\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n\n\n\nconst svc = 'Ingress';\n/**\n * Client to access Ingress APIs\n */\nclass IngressClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    /**\n     * @param host - hostname including protocol. i.e. 'https://cluster.livekit.io'\n     * @param apiKey - API Key, can be set in env var LIVEKIT_API_KEY\n     * @param secret - API Secret, can be set in env var LIVEKIT_API_SECRET\n     */\n    constructor(host, apiKey, secret) {\n        super(apiKey, secret);\n        this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n    }\n    /**\n     * @param inputType - protocol for the ingress\n     * @param opts - CreateIngressOptions\n     */\n    async createIngress(inputType, opts) {\n        let name = '';\n        let participantName = '';\n        let participantIdentity = '';\n        let bypassTranscoding = false;\n        let url = '';\n        if (opts == null) {\n            throw new Error('options dictionary is required');\n        }\n        const roomName = opts.roomName;\n        const enableTranscoding = opts.enableTranscoding;\n        const audio = opts.audio;\n        const video = opts.video;\n        const participantMetadata = opts.participantMetadata;\n        name = opts.name || '';\n        participantName = opts.participantName || '';\n        participantIdentity = opts.participantIdentity || '';\n        bypassTranscoding = opts.bypassTranscoding || false;\n        url = opts.url || '';\n        if (typeof roomName == 'undefined') {\n            throw new Error('required roomName option not provided');\n        }\n        if (participantIdentity == '') {\n            throw new Error('required participantIdentity option not provided');\n        }\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateIngressRequest({\n            inputType,\n            name,\n            roomName,\n            participantIdentity,\n            participantMetadata,\n            participantName,\n            bypassTranscoding,\n            enableTranscoding,\n            url,\n            audio,\n            video,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'CreateIngress', req, await this.authHeader({ ingressAdmin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param ingressId - ID of the ingress to update\n     * @param opts - UpdateIngressOptions\n     */\n    async updateIngress(ingressId, opts) {\n        const name = opts.name || '';\n        const roomName = opts.roomName || '';\n        const participantName = opts.participantName || '';\n        const participantIdentity = opts.participantIdentity || '';\n        const { participantMetadata } = opts;\n        const { audio, video, bypassTranscoding, enableTranscoding } = opts;\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateIngressRequest({\n            ingressId,\n            name,\n            roomName,\n            participantIdentity,\n            participantName,\n            participantMetadata,\n            bypassTranscoding,\n            enableTranscoding,\n            audio,\n            video,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'UpdateIngress', req, await this.authHeader({ ingressAdmin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param arg - list room name or options\n     */\n    async listIngress(arg) {\n        var _a;\n        let req = {};\n        if (typeof arg === 'string') {\n            req.roomName = arg;\n        }\n        else if (arg) {\n            req = arg;\n        }\n        const data = await this.rpc.request(svc, 'ListIngress', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListIngressRequest(req).toJson(), await this.authHeader({ ingressAdmin: true }));\n        return (_a = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListIngressResponse.fromJson(data, { ignoreUnknownFields: true }).items) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * @param ingressId - ingress to delete\n     */\n    async deleteIngress(ingressId) {\n        const data = await this.rpc.request(svc, 'DeleteIngress', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteIngressRequest({ ingressId }).toJson(), await this.authHeader({ ingressAdmin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n}\n//# sourceMappingURL=IngressClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuNy4zL25vZGVfbW9kdWxlcy9saXZla2l0LXNlcnZlci1zZGsvZGlzdC9JbmdyZXNzQ2xpZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBNEo7QUFDakg7QUFDYztBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNPLDRCQUE0Qix1REFBVztBQUM5QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVCQUF1QixrREFBUSxPQUFPLHdEQUFjO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixtRUFBb0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCwrRkFBK0Ysb0JBQW9CO0FBQ25ILGVBQWUsMERBQVcsa0JBQWtCLDJCQUEyQjtBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixzQkFBc0I7QUFDdEMsZ0JBQWdCLHFEQUFxRDtBQUNyRSx3QkFBd0IsbUVBQW9CO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULCtGQUErRixvQkFBb0I7QUFDbkgsZUFBZSwwREFBVyxrQkFBa0IsMkJBQTJCO0FBQ3ZFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0VBQW9FLGlFQUFrQix3Q0FBd0Msb0JBQW9CO0FBQ2xKLHFCQUFxQixrRUFBbUIsa0JBQWtCLDJCQUEyQjtBQUNyRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0VBQXNFLG1FQUFvQixHQUFHLFdBQVcsb0NBQW9DLG9CQUFvQjtBQUNoSyxlQUFlLDBEQUFXLGtCQUFrQiwyQkFBMkI7QUFDdkU7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGxheWdyb3VuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9saXZla2l0LXNlcnZlci1zZGtAMi43LjMvbm9kZV9tb2R1bGVzL2xpdmVraXQtc2VydmVyLXNkay9kaXN0L0luZ3Jlc3NDbGllbnQuanM/NTcyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDcmVhdGVJbmdyZXNzUmVxdWVzdCwgRGVsZXRlSW5ncmVzc1JlcXVlc3QsIEluZ3Jlc3NJbmZvLCBMaXN0SW5ncmVzc1JlcXVlc3QsIExpc3RJbmdyZXNzUmVzcG9uc2UsIFVwZGF0ZUluZ3Jlc3NSZXF1ZXN0LCB9IGZyb20gJ0BsaXZla2l0L3Byb3RvY29sJztcbmltcG9ydCBTZXJ2aWNlQmFzZSBmcm9tICcuL1NlcnZpY2VCYXNlLmpzJztcbmltcG9ydCB7IFR3aXJwUnBjLCBsaXZla2l0UGFja2FnZSB9IGZyb20gJy4vVHdpcnBSUEMuanMnO1xuY29uc3Qgc3ZjID0gJ0luZ3Jlc3MnO1xuLyoqXG4gKiBDbGllbnQgdG8gYWNjZXNzIEluZ3Jlc3MgQVBJc1xuICovXG5leHBvcnQgY2xhc3MgSW5ncmVzc0NsaWVudCBleHRlbmRzIFNlcnZpY2VCYXNlIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0gaG9zdCAtIGhvc3RuYW1lIGluY2x1ZGluZyBwcm90b2NvbC4gaS5lLiAnaHR0cHM6Ly9jbHVzdGVyLmxpdmVraXQuaW8nXG4gICAgICogQHBhcmFtIGFwaUtleSAtIEFQSSBLZXksIGNhbiBiZSBzZXQgaW4gZW52IHZhciBMSVZFS0lUX0FQSV9LRVlcbiAgICAgKiBAcGFyYW0gc2VjcmV0IC0gQVBJIFNlY3JldCwgY2FuIGJlIHNldCBpbiBlbnYgdmFyIExJVkVLSVRfQVBJX1NFQ1JFVFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGhvc3QsIGFwaUtleSwgc2VjcmV0KSB7XG4gICAgICAgIHN1cGVyKGFwaUtleSwgc2VjcmV0KTtcbiAgICAgICAgdGhpcy5ycGMgPSBuZXcgVHdpcnBScGMoaG9zdCwgbGl2ZWtpdFBhY2thZ2UpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBAcGFyYW0gaW5wdXRUeXBlIC0gcHJvdG9jb2wgZm9yIHRoZSBpbmdyZXNzXG4gICAgICogQHBhcmFtIG9wdHMgLSBDcmVhdGVJbmdyZXNzT3B0aW9uc1xuICAgICAqL1xuICAgIGFzeW5jIGNyZWF0ZUluZ3Jlc3MoaW5wdXRUeXBlLCBvcHRzKSB7XG4gICAgICAgIGxldCBuYW1lID0gJyc7XG4gICAgICAgIGxldCBwYXJ0aWNpcGFudE5hbWUgPSAnJztcbiAgICAgICAgbGV0IHBhcnRpY2lwYW50SWRlbnRpdHkgPSAnJztcbiAgICAgICAgbGV0IGJ5cGFzc1RyYW5zY29kaW5nID0gZmFsc2U7XG4gICAgICAgIGxldCB1cmwgPSAnJztcbiAgICAgICAgaWYgKG9wdHMgPT0gbnVsbCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdvcHRpb25zIGRpY3Rpb25hcnkgaXMgcmVxdWlyZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByb29tTmFtZSA9IG9wdHMucm9vbU5hbWU7XG4gICAgICAgIGNvbnN0IGVuYWJsZVRyYW5zY29kaW5nID0gb3B0cy5lbmFibGVUcmFuc2NvZGluZztcbiAgICAgICAgY29uc3QgYXVkaW8gPSBvcHRzLmF1ZGlvO1xuICAgICAgICBjb25zdCB2aWRlbyA9IG9wdHMudmlkZW87XG4gICAgICAgIGNvbnN0IHBhcnRpY2lwYW50TWV0YWRhdGEgPSBvcHRzLnBhcnRpY2lwYW50TWV0YWRhdGE7XG4gICAgICAgIG5hbWUgPSBvcHRzLm5hbWUgfHwgJyc7XG4gICAgICAgIHBhcnRpY2lwYW50TmFtZSA9IG9wdHMucGFydGljaXBhbnROYW1lIHx8ICcnO1xuICAgICAgICBwYXJ0aWNpcGFudElkZW50aXR5ID0gb3B0cy5wYXJ0aWNpcGFudElkZW50aXR5IHx8ICcnO1xuICAgICAgICBieXBhc3NUcmFuc2NvZGluZyA9IG9wdHMuYnlwYXNzVHJhbnNjb2RpbmcgfHwgZmFsc2U7XG4gICAgICAgIHVybCA9IG9wdHMudXJsIHx8ICcnO1xuICAgICAgICBpZiAodHlwZW9mIHJvb21OYW1lID09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3JlcXVpcmVkIHJvb21OYW1lIG9wdGlvbiBub3QgcHJvdmlkZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAocGFydGljaXBhbnRJZGVudGl0eSA9PSAnJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdyZXF1aXJlZCBwYXJ0aWNpcGFudElkZW50aXR5IG9wdGlvbiBub3QgcHJvdmlkZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCByZXEgPSBuZXcgQ3JlYXRlSW5ncmVzc1JlcXVlc3Qoe1xuICAgICAgICAgICAgaW5wdXRUeXBlLFxuICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgIHJvb21OYW1lLFxuICAgICAgICAgICAgcGFydGljaXBhbnRJZGVudGl0eSxcbiAgICAgICAgICAgIHBhcnRpY2lwYW50TWV0YWRhdGEsXG4gICAgICAgICAgICBwYXJ0aWNpcGFudE5hbWUsXG4gICAgICAgICAgICBieXBhc3NUcmFuc2NvZGluZyxcbiAgICAgICAgICAgIGVuYWJsZVRyYW5zY29kaW5nLFxuICAgICAgICAgICAgdXJsLFxuICAgICAgICAgICAgYXVkaW8sXG4gICAgICAgICAgICB2aWRlbyxcbiAgICAgICAgfSkudG9Kc29uKCk7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnJwYy5yZXF1ZXN0KHN2YywgJ0NyZWF0ZUluZ3Jlc3MnLCByZXEsIGF3YWl0IHRoaXMuYXV0aEhlYWRlcih7IGluZ3Jlc3NBZG1pbjogdHJ1ZSB9KSk7XG4gICAgICAgIHJldHVybiBJbmdyZXNzSW5mby5mcm9tSnNvbihkYXRhLCB7IGlnbm9yZVVua25vd25GaWVsZHM6IHRydWUgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBwYXJhbSBpbmdyZXNzSWQgLSBJRCBvZiB0aGUgaW5ncmVzcyB0byB1cGRhdGVcbiAgICAgKiBAcGFyYW0gb3B0cyAtIFVwZGF0ZUluZ3Jlc3NPcHRpb25zXG4gICAgICovXG4gICAgYXN5bmMgdXBkYXRlSW5ncmVzcyhpbmdyZXNzSWQsIG9wdHMpIHtcbiAgICAgICAgY29uc3QgbmFtZSA9IG9wdHMubmFtZSB8fCAnJztcbiAgICAgICAgY29uc3Qgcm9vbU5hbWUgPSBvcHRzLnJvb21OYW1lIHx8ICcnO1xuICAgICAgICBjb25zdCBwYXJ0aWNpcGFudE5hbWUgPSBvcHRzLnBhcnRpY2lwYW50TmFtZSB8fCAnJztcbiAgICAgICAgY29uc3QgcGFydGljaXBhbnRJZGVudGl0eSA9IG9wdHMucGFydGljaXBhbnRJZGVudGl0eSB8fCAnJztcbiAgICAgICAgY29uc3QgeyBwYXJ0aWNpcGFudE1ldGFkYXRhIH0gPSBvcHRzO1xuICAgICAgICBjb25zdCB7IGF1ZGlvLCB2aWRlbywgYnlwYXNzVHJhbnNjb2RpbmcsIGVuYWJsZVRyYW5zY29kaW5nIH0gPSBvcHRzO1xuICAgICAgICBjb25zdCByZXEgPSBuZXcgVXBkYXRlSW5ncmVzc1JlcXVlc3Qoe1xuICAgICAgICAgICAgaW5ncmVzc0lkLFxuICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgIHJvb21OYW1lLFxuICAgICAgICAgICAgcGFydGljaXBhbnRJZGVudGl0eSxcbiAgICAgICAgICAgIHBhcnRpY2lwYW50TmFtZSxcbiAgICAgICAgICAgIHBhcnRpY2lwYW50TWV0YWRhdGEsXG4gICAgICAgICAgICBieXBhc3NUcmFuc2NvZGluZyxcbiAgICAgICAgICAgIGVuYWJsZVRyYW5zY29kaW5nLFxuICAgICAgICAgICAgYXVkaW8sXG4gICAgICAgICAgICB2aWRlbyxcbiAgICAgICAgfSkudG9Kc29uKCk7XG4gICAgICAgIGNvbnN0IGRhdGEgPSBhd2FpdCB0aGlzLnJwYy5yZXF1ZXN0KHN2YywgJ1VwZGF0ZUluZ3Jlc3MnLCByZXEsIGF3YWl0IHRoaXMuYXV0aEhlYWRlcih7IGluZ3Jlc3NBZG1pbjogdHJ1ZSB9KSk7XG4gICAgICAgIHJldHVybiBJbmdyZXNzSW5mby5mcm9tSnNvbihkYXRhLCB7IGlnbm9yZVVua25vd25GaWVsZHM6IHRydWUgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEBwYXJhbSBhcmcgLSBsaXN0IHJvb20gbmFtZSBvciBvcHRpb25zXG4gICAgICovXG4gICAgYXN5bmMgbGlzdEluZ3Jlc3MoYXJnKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgbGV0IHJlcSA9IHt9O1xuICAgICAgICBpZiAodHlwZW9mIGFyZyA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgIHJlcS5yb29tTmFtZSA9IGFyZztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChhcmcpIHtcbiAgICAgICAgICAgIHJlcSA9IGFyZztcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgdGhpcy5ycGMucmVxdWVzdChzdmMsICdMaXN0SW5ncmVzcycsIG5ldyBMaXN0SW5ncmVzc1JlcXVlc3QocmVxKS50b0pzb24oKSwgYXdhaXQgdGhpcy5hdXRoSGVhZGVyKHsgaW5ncmVzc0FkbWluOiB0cnVlIH0pKTtcbiAgICAgICAgcmV0dXJuIChfYSA9IExpc3RJbmdyZXNzUmVzcG9uc2UuZnJvbUpzb24oZGF0YSwgeyBpZ25vcmVVbmtub3duRmllbGRzOiB0cnVlIH0pLml0ZW1zKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBbXTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGluZ3Jlc3NJZCAtIGluZ3Jlc3MgdG8gZGVsZXRlXG4gICAgICovXG4gICAgYXN5bmMgZGVsZXRlSW5ncmVzcyhpbmdyZXNzSWQpIHtcbiAgICAgICAgY29uc3QgZGF0YSA9IGF3YWl0IHRoaXMucnBjLnJlcXVlc3Qoc3ZjLCAnRGVsZXRlSW5ncmVzcycsIG5ldyBEZWxldGVJbmdyZXNzUmVxdWVzdCh7IGluZ3Jlc3NJZCB9KS50b0pzb24oKSwgYXdhaXQgdGhpcy5hdXRoSGVhZGVyKHsgaW5ncmVzc0FkbWluOiB0cnVlIH0pKTtcbiAgICAgICAgcmV0dXJuIEluZ3Jlc3NJbmZvLmZyb21Kc29uKGRhdGEsIHsgaWdub3JlVW5rbm93bkZpZWxkczogdHJ1ZSB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1JbmdyZXNzQ2xpZW50LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/IngressClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/RoomServiceClient.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/RoomServiceClient.js ***!
  \***************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RoomServiceClient: () => (/* binding */ RoomServiceClient)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/.pnpm/@livekit+protocol@1.27.1/node_modules/@livekit/protocol/src/index.js\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n\n\n\nconst svc = 'RoomService';\n/**\n * Client to access Room APIs\n */\nclass RoomServiceClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    /**\n     *\n     * @param host - hostname including protocol. i.e. 'https://cluster.livekit.io'\n     * @param apiKey - API Key, can be set in env var LIVEKIT_API_KEY\n     * @param secret - API Secret, can be set in env var LIVEKIT_API_SECRET\n     */\n    constructor(host, apiKey, secret) {\n        super(apiKey, secret);\n        this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n    }\n    /**\n     * Creates a new room. Explicit room creation is not required, since rooms will\n     * be automatically created when the first participant joins. This method can be\n     * used to customize room settings.\n     * @param options -\n     */\n    async createRoom(options) {\n        const data = await this.rpc.request(svc, 'CreateRoom', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateRoomRequest(options).toJson(), await this.authHeader({ roomCreate: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.Room.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * List active rooms\n     * @param names - when undefined or empty, list all rooms.\n     *                otherwise returns rooms with matching names\n     * @returns\n     */\n    async listRooms(names) {\n        var _a;\n        const data = await this.rpc.request(svc, 'ListRooms', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListRoomsRequest({ names: names !== null && names !== void 0 ? names : [] }).toJson(), await this.authHeader({ roomList: true }));\n        const res = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListRoomsResponse.fromJson(data, { ignoreUnknownFields: true });\n        return (_a = res.rooms) !== null && _a !== void 0 ? _a : [];\n    }\n    async deleteRoom(room) {\n        await this.rpc.request(svc, 'DeleteRoom', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteRoomRequest({ room }).toJson(), await this.authHeader({ roomCreate: true }));\n    }\n    /**\n     * Update metadata of a room\n     * @param room - name of the room\n     * @param metadata - the new metadata for the room\n     */\n    async updateRoomMetadata(room, metadata) {\n        const data = await this.rpc.request(svc, 'UpdateRoomMetadata', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateRoomMetadataRequest({ room, metadata }).toJson(), await this.authHeader({ roomAdmin: true, room }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.Room.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * List participants in a room\n     * @param room - name of the room\n     */\n    async listParticipants(room) {\n        var _a;\n        const data = await this.rpc.request(svc, 'ListParticipants', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListParticipantsRequest({ room }).toJson(), await this.authHeader({ roomAdmin: true, room }));\n        const res = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListParticipantsResponse.fromJson(data, { ignoreUnknownFields: true });\n        return (_a = res.participants) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * Get information on a specific participant, including the tracks that participant\n     * has published\n     * @param room - name of the room\n     * @param identity - identity of the participant to return\n     */\n    async getParticipant(room, identity) {\n        const data = await this.rpc.request(svc, 'GetParticipant', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomParticipantIdentity({ room, identity }).toJson(), await this.authHeader({ roomAdmin: true, room }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * Removes a participant in the room. This will disconnect the participant\n     * and will emit a Disconnected event for that participant.\n     * Even after being removed, the participant can still re-join the room.\n     * @param room -\n     * @param identity -\n     */\n    async removeParticipant(room, identity) {\n        await this.rpc.request(svc, 'RemoveParticipant', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomParticipantIdentity({ room, identity }).toJson(), await this.authHeader({ roomAdmin: true, room }));\n    }\n    /**\n     * Mutes a track that the participant has published.\n     * @param room -\n     * @param identity -\n     * @param trackSid - sid of the track to be muted\n     * @param muted - true to mute, false to unmute\n     */\n    async mutePublishedTrack(room, identity, trackSid, muted) {\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.MuteRoomTrackRequest({\n            room,\n            identity,\n            trackSid,\n            muted,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'MutePublishedTrack', req, await this.authHeader({ roomAdmin: true, room }));\n        const res = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.MuteRoomTrackResponse.fromJson(data, { ignoreUnknownFields: true });\n        return res.track;\n    }\n    async updateParticipant(room, identity, metadataOrOptions, maybePermission, maybeName) {\n        const hasOptions = typeof metadataOrOptions === 'object';\n        const metadata = hasOptions ? metadataOrOptions === null || metadataOrOptions === void 0 ? void 0 : metadataOrOptions.metadata : metadataOrOptions;\n        const permission = hasOptions ? metadataOrOptions.permission : maybePermission;\n        const name = hasOptions ? metadataOrOptions.name : maybeName;\n        const attributes = hasOptions\n            ? metadataOrOptions.attributes\n            : {};\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateParticipantRequest({\n            room,\n            identity,\n            attributes,\n            metadata,\n            name,\n        });\n        if (permission) {\n            req.permission = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantPermission(permission);\n        }\n        const data = await this.rpc.request(svc, 'UpdateParticipant', req.toJson(), await this.authHeader({ roomAdmin: true, room }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * Updates a participant's subscription to tracks\n     * @param room -\n     * @param identity -\n     * @param trackSids -\n     * @param subscribe - true to subscribe, false to unsubscribe\n     */\n    async updateSubscriptions(room, identity, trackSids, subscribe) {\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.UpdateSubscriptionsRequest({\n            room,\n            identity,\n            trackSids,\n            subscribe,\n            participantTracks: [],\n        }).toJson();\n        await this.rpc.request(svc, 'UpdateSubscriptions', req, await this.authHeader({ roomAdmin: true, room }));\n    }\n    async sendData(room, data, kind, options = {}) {\n        const destinationSids = Array.isArray(options) ? options : options.destinationSids;\n        const topic = Array.isArray(options) ? undefined : options.topic;\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SendDataRequest({\n            room,\n            data,\n            kind,\n            destinationSids: destinationSids !== null && destinationSids !== void 0 ? destinationSids : [],\n            topic,\n        });\n        if (!Array.isArray(options) && options.destinationIdentities) {\n            req.destinationIdentities = options.destinationIdentities;\n        }\n        await this.rpc.request(svc, 'SendData', req.toJson(), await this.authHeader({ roomAdmin: true, room }));\n    }\n}\n//# sourceMappingURL=RoomServiceClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/RoomServiceClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/ServiceBase.js":
/*!*********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/ServiceBase.js ***!
  \*********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ServiceBase)\n/* harmony export */ });\n/* harmony import */ var _AccessToken_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./AccessToken.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/AccessToken.js\");\n// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\n\n/**\n * Utilities to handle authentication\n */\nclass ServiceBase {\n    /**\n     * @param apiKey - API Key.\n     * @param secret - API Secret.\n     * @param ttl - token TTL\n     */\n    constructor(apiKey, secret, ttl) {\n        this.apiKey = apiKey;\n        this.secret = secret;\n        this.ttl = ttl || '10m';\n    }\n    async authHeader(grant, sip) {\n        const at = new _AccessToken_js__WEBPACK_IMPORTED_MODULE_0__.AccessToken(this.apiKey, this.secret, { ttl: this.ttl });\n        at.addGrant(grant);\n        if (sip) {\n            at.addSIPGrant(sip);\n        }\n        return {\n            Authorization: `Bearer ${await at.toJwt()}`,\n        };\n    }\n}\n//# sourceMappingURL=ServiceBase.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuNy4zL25vZGVfbW9kdWxlcy9saXZla2l0LXNlcnZlci1zZGsvZGlzdC9TZXJ2aWNlQmFzZS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUMrQztBQUMvQztBQUNBO0FBQ0E7QUFDZTtBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsd0RBQVcsNkJBQTZCLGVBQWU7QUFDOUU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxpQkFBaUI7QUFDdEQ7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9wbGF5Z3JvdW5kLy4vbm9kZV9tb2R1bGVzLy5wbnBtL2xpdmVraXQtc2VydmVyLXNka0AyLjcuMy9ub2RlX21vZHVsZXMvbGl2ZWtpdC1zZXJ2ZXItc2RrL2Rpc3QvU2VydmljZUJhc2UuanM/MGE2ZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBTUERYLUZpbGVDb3B5cmlnaHRUZXh0OiAyMDI0IExpdmVLaXQsIEluYy5cbi8vXG4vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQXBhY2hlLTIuMFxuaW1wb3J0IHsgQWNjZXNzVG9rZW4gfSBmcm9tICcuL0FjY2Vzc1Rva2VuLmpzJztcbi8qKlxuICogVXRpbGl0aWVzIHRvIGhhbmRsZSBhdXRoZW50aWNhdGlvblxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZXJ2aWNlQmFzZSB7XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGFwaUtleSAtIEFQSSBLZXkuXG4gICAgICogQHBhcmFtIHNlY3JldCAtIEFQSSBTZWNyZXQuXG4gICAgICogQHBhcmFtIHR0bCAtIHRva2VuIFRUTFxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGFwaUtleSwgc2VjcmV0LCB0dGwpIHtcbiAgICAgICAgdGhpcy5hcGlLZXkgPSBhcGlLZXk7XG4gICAgICAgIHRoaXMuc2VjcmV0ID0gc2VjcmV0O1xuICAgICAgICB0aGlzLnR0bCA9IHR0bCB8fCAnMTBtJztcbiAgICB9XG4gICAgYXN5bmMgYXV0aEhlYWRlcihncmFudCwgc2lwKSB7XG4gICAgICAgIGNvbnN0IGF0ID0gbmV3IEFjY2Vzc1Rva2VuKHRoaXMuYXBpS2V5LCB0aGlzLnNlY3JldCwgeyB0dGw6IHRoaXMudHRsIH0pO1xuICAgICAgICBhdC5hZGRHcmFudChncmFudCk7XG4gICAgICAgIGlmIChzaXApIHtcbiAgICAgICAgICAgIGF0LmFkZFNJUEdyYW50KHNpcCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHthd2FpdCBhdC50b0p3dCgpfWAsXG4gICAgICAgIH07XG4gICAgfVxufVxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9U2VydmljZUJhc2UuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/ServiceBase.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/SipClient.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/SipClient.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SipClient: () => (/* binding */ SipClient)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/.pnpm/@livekit+protocol@1.27.1/node_modules/@livekit/protocol/src/index.js\");\n/* harmony import */ var _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ServiceBase.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/ServiceBase.js\");\n/* harmony import */ var _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TwirpRPC.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/TwirpRPC.js\");\n// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\n\n\n\nconst svc = 'SIP';\n/**\n * Client to access Egress APIs\n */\nclass SipClient extends _ServiceBase_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    /**\n     * @param host - hostname including protocol. i.e. 'https://cluster.livekit.io'\n     * @param apiKey - API Key, can be set in env var LIVEKIT_API_KEY\n     * @param secret - API Secret, can be set in env var LIVEKIT_API_SECRET\n     */\n    constructor(host, apiKey, secret) {\n        super(apiKey, secret);\n        this.rpc = new _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.TwirpRpc(host, _TwirpRPC_js__WEBPACK_IMPORTED_MODULE_2__.livekitPackage);\n    }\n    /**\n     * @param number - phone number of the trunk\n     * @param opts - CreateSipTrunkOptions\n     * @deprecated use `createSipInboundTrunk` or `createSipOutboundTrunk`\n     */\n    async createSipTrunk(number, opts) {\n        let inboundAddresses;\n        let inboundNumbers;\n        let inboundUsername = '';\n        let inboundPassword = '';\n        let outboundAddress = '';\n        let outboundUsername = '';\n        let outboundPassword = '';\n        let name = '';\n        let metadata = '';\n        if (opts !== undefined) {\n            inboundAddresses = opts.inbound_addresses;\n            inboundNumbers = opts.inbound_numbers;\n            inboundUsername = opts.inbound_username || '';\n            inboundPassword = opts.inbound_password || '';\n            outboundAddress = opts.outbound_address || '';\n            outboundUsername = opts.outbound_username || '';\n            outboundPassword = opts.outbound_password || '';\n            name = opts.name || '';\n            metadata = opts.metadata || '';\n        }\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPTrunkRequest({\n            name: name,\n            metadata: metadata,\n            inboundAddresses: inboundAddresses,\n            inboundNumbers: inboundNumbers,\n            inboundUsername: inboundUsername,\n            inboundPassword: inboundPassword,\n            outboundNumber: number,\n            outboundAddress: outboundAddress,\n            outboundUsername: outboundUsername,\n            outboundPassword: outboundPassword,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'CreateSIPTrunk', req, await this.authHeader({}, { admin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param name - human-readable name of the trunk\n     * @param numbers - phone numbers of the trunk\n     * @param opts - CreateSipTrunkOptions\n     */\n    async createSipInboundTrunk(name, numbers, opts) {\n        let allowedAddresses;\n        let allowedNumbers;\n        let authUsername = '';\n        let authPassword = '';\n        let metadata = '';\n        if (opts !== undefined) {\n            allowedAddresses = opts.allowed_addresses;\n            allowedNumbers = opts.allowed_numbers;\n            authUsername = opts.auth_username || '';\n            authPassword = opts.auth_password || '';\n            metadata = opts.metadata || '';\n        }\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPInboundTrunkRequest({\n            trunk: new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPInboundTrunkInfo({\n                name: name,\n                numbers: numbers,\n                metadata: metadata,\n                allowedAddresses: allowedAddresses,\n                allowedNumbers: allowedNumbers,\n                authUsername: authUsername,\n                authPassword: authPassword,\n            }),\n        }).toJson();\n        const data = await this.rpc.request(svc, 'CreateSIPInboundTrunk', req, await this.authHeader({}, { admin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPInboundTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param name - human-readable name of the trunk\n     * @param address - hostname and port of the SIP server to dial\n     * @param numbers - phone numbers of the trunk\n     * @param opts - CreateSipTrunkOptions\n     */\n    async createSipOutboundTrunk(name, address, numbers, opts) {\n        let authUsername = '';\n        let authPassword = '';\n        let transport = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPTransport.SIP_TRANSPORT_AUTO;\n        let metadata = '';\n        if (opts !== undefined) {\n            authUsername = opts.auth_username || '';\n            authPassword = opts.auth_password || '';\n            transport = opts.transport || _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPTransport.SIP_TRANSPORT_AUTO;\n            metadata = opts.metadata || '';\n        }\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPOutboundTrunkRequest({\n            trunk: new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPOutboundTrunkInfo({\n                name: name,\n                address: address,\n                numbers: numbers,\n                metadata: metadata,\n                transport: transport,\n                authUsername: authUsername,\n                authPassword: authPassword,\n            }),\n        }).toJson();\n        const data = await this.rpc.request(svc, 'CreateSIPOutboundTrunk', req, await this.authHeader({}, { admin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPOutboundTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @deprecated use `listSipInboundTrunk` or `listSipOutboundTrunk`\n     */\n    async listSipTrunk() {\n        var _a;\n        const req = {};\n        const data = await this.rpc.request(svc, 'ListSIPTrunk', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPTrunkRequest(req).toJson(), await this.authHeader({}, { admin: true }));\n        return (_a = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPTrunkResponse.fromJson(data, { ignoreUnknownFields: true }).items) !== null && _a !== void 0 ? _a : [];\n    }\n    async listSipInboundTrunk() {\n        var _a;\n        const req = {};\n        const data = await this.rpc.request(svc, 'ListSIPInboundTrunk', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPInboundTrunkRequest(req).toJson(), await this.authHeader({}, { admin: true }));\n        return (_a = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPInboundTrunkResponse.fromJson(data, { ignoreUnknownFields: true }).items) !== null && _a !== void 0 ? _a : [];\n    }\n    async listSipOutboundTrunk() {\n        var _a;\n        const req = {};\n        const data = await this.rpc.request(svc, 'ListSIPOutboundTrunk', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPOutboundTrunkRequest(req).toJson(), await this.authHeader({}, { admin: true }));\n        return (_a = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPOutboundTrunkResponse.fromJson(data, { ignoreUnknownFields: true }).items) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * @param sipTrunkId - sip trunk to delete\n     */\n    async deleteSipTrunk(sipTrunkId) {\n        const data = await this.rpc.request(svc, 'DeleteSIPTrunk', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteSIPTrunkRequest({ sipTrunkId }).toJson(), await this.authHeader({}, { admin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPTrunkInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param rule - sip dispatch rule\n     * @param opts - CreateSipDispatchRuleOptions\n     */\n    async createSipDispatchRule(rule, opts) {\n        let trunkIds;\n        let hidePhoneNumber = false;\n        let name = '';\n        let metadata = '';\n        let ruleProto = undefined;\n        if (opts !== undefined) {\n            trunkIds = opts.trunkIds;\n            hidePhoneNumber = opts.hidePhoneNumber || false;\n            name = opts.name || '';\n            metadata = opts.metadata || '';\n        }\n        if (rule.type == 'direct') {\n            ruleProto = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRule({\n                rule: {\n                    case: 'dispatchRuleDirect',\n                    value: new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleDirect({\n                        roomName: rule.roomName,\n                        pin: rule.pin || '',\n                    }),\n                },\n            });\n        }\n        else if (rule.type == 'individual') {\n            ruleProto = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRule({\n                rule: {\n                    case: 'dispatchRuleIndividual',\n                    value: new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleIndividual({\n                        roomPrefix: rule.roomPrefix,\n                        pin: rule.pin || '',\n                    }),\n                },\n            });\n        }\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPDispatchRuleRequest({\n            rule: ruleProto,\n            trunkIds: trunkIds,\n            hidePhoneNumber: hidePhoneNumber,\n            name: name,\n            metadata: metadata,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'CreateSIPDispatchRule', req, await this.authHeader({}, { admin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    async listSipDispatchRule() {\n        var _a;\n        const req = {};\n        const data = await this.rpc.request(svc, 'ListSIPDispatchRule', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPDispatchRuleRequest(req).toJson(), await this.authHeader({}, { admin: true }));\n        return (_a = _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ListSIPDispatchRuleResponse.fromJson(data, { ignoreUnknownFields: true }).items) !== null && _a !== void 0 ? _a : [];\n    }\n    /**\n     * @param sipDispatchRuleId - sip trunk to delete\n     */\n    async deleteSipDispatchRule(sipDispatchRuleId) {\n        const data = await this.rpc.request(svc, 'DeleteSIPDispatchRule', new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DeleteSIPDispatchRuleRequest({ sipDispatchRuleId }).toJson(), await this.authHeader({}, { admin: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param sipTrunkId - sip trunk to use for the call\n     * @param number - number to dial\n     * @param roomName - room to attach the call to\n     * @param opts - CreateSipParticipantOptions\n     */\n    async createSipParticipant(sipTrunkId, number, roomName, opts) {\n        let participantIdentity = '';\n        let participantName = '';\n        let participantMetadata = '';\n        let dtmf = '';\n        let playRingtone = false;\n        let playDialtone = false;\n        let hidePhoneNumber = false;\n        if (opts !== undefined) {\n            participantIdentity = opts.participantIdentity || '';\n            participantName = opts.participantName || '';\n            participantMetadata = opts.participantMetadata || '';\n            dtmf = opts.dtmf || '';\n            playRingtone = opts.playRingtone || false;\n            playDialtone = opts.playDialtone || playRingtone; // Enable PlayDialtone if either PlayDialtone or playRingtone is set\n            hidePhoneNumber = opts.hidePhoneNumber || false;\n        }\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.CreateSIPParticipantRequest({\n            sipTrunkId: sipTrunkId,\n            sipCallTo: number,\n            roomName: roomName,\n            participantIdentity: participantIdentity,\n            participantName: participantName,\n            participantMetadata: participantMetadata,\n            dtmf: dtmf,\n            playRingtone: playDialtone,\n            playDialtone: playDialtone,\n            hidePhoneNumber: hidePhoneNumber,\n        }).toJson();\n        const data = await this.rpc.request(svc, 'CreateSIPParticipant', req, await this.authHeader({}, { call: true }));\n        return _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPParticipantInfo.fromJson(data, { ignoreUnknownFields: true });\n    }\n    /**\n     * @param roomName - room the SIP participant to transfer is connectd to\n     * @param participantIdentity - identity of the SIP participant to transfer\n     * @param transferTo - SIP URL to transfer the participant to\n     */\n    async transferSipParticipant(roomName, participantIdentity, transferTo, opts) {\n        let playDialtone = false;\n        if (opts !== undefined) {\n            playDialtone = opts.playDialtone || false;\n        }\n        const req = new _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TransferSIPParticipantRequest({\n            participantIdentity: participantIdentity,\n            roomName: roomName,\n            transferTo: transferTo,\n            playDialtone: playDialtone,\n        }).toJson();\n        await this.rpc.request(svc, 'TransferSIPParticipant', req, await this.authHeader({ roomAdmin: true, room: roomName }, { call: true }));\n    }\n}\n//# sourceMappingURL=SipClient.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/SipClient.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/TwirpRPC.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/TwirpRPC.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TwirpRpc: () => (/* binding */ TwirpRpc),\n/* harmony export */   livekitPackage: () => (/* binding */ livekitPackage)\n/* harmony export */ });\n/* harmony import */ var camelcase_keys__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! camelcase-keys */ \"(rsc)/./node_modules/.pnpm/camelcase-keys@9.1.3/node_modules/camelcase-keys/index.js\");\n\n// twirp RPC adapter for client implementation\nconst defaultPrefix = '/twirp';\nconst livekitPackage = 'livekit';\n/**\n * JSON based Twirp V7 RPC\n */\nclass TwirpRpc {\n    constructor(host, pkg, prefix) {\n        if (host.startsWith('ws')) {\n            host = host.replace('ws', 'http');\n        }\n        this.host = host;\n        this.pkg = pkg;\n        this.prefix = prefix || defaultPrefix;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async request(service, method, data, headers) {\n        const path = `${this.prefix}/${this.pkg}.${service}/${method}`;\n        const url = new URL(path, this.host);\n        const response = await fetch(url, {\n            method: 'POST',\n            headers: Object.assign({ 'Content-Type': 'application/json;charset=UTF-8' }, headers),\n            body: JSON.stringify(data),\n        });\n        if (!response.ok) {\n            throw new Error(`Request failed with status ${response.status}: ${response.statusText}`);\n        }\n        const parsedResp = await response.json();\n        return (0,camelcase_keys__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(parsedResp, { deep: true });\n    }\n}\n//# sourceMappingURL=TwirpRPC.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuNy4zL25vZGVfbW9kdWxlcy9saXZla2l0LXNlcnZlci1zZGsvZGlzdC9Ud2lycFJQQy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMkM7QUFDM0M7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixZQUFZLEdBQUcsU0FBUyxHQUFHLFFBQVEsR0FBRyxPQUFPO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxrQ0FBa0MsZ0JBQWdCO0FBQ3ZGO0FBQ0EsU0FBUztBQUNUO0FBQ0EsMERBQTBELGdCQUFnQixJQUFJLG9CQUFvQjtBQUNsRztBQUNBO0FBQ0EsZUFBZSwwREFBYSxlQUFlLFlBQVk7QUFDdkQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGxheWdyb3VuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9saXZla2l0LXNlcnZlci1zZGtAMi43LjMvbm9kZV9tb2R1bGVzL2xpdmVraXQtc2VydmVyLXNkay9kaXN0L1R3aXJwUlBDLmpzPzA5ZTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNhbWVsY2FzZUtleXMgZnJvbSAnY2FtZWxjYXNlLWtleXMnO1xuLy8gdHdpcnAgUlBDIGFkYXB0ZXIgZm9yIGNsaWVudCBpbXBsZW1lbnRhdGlvblxuY29uc3QgZGVmYXVsdFByZWZpeCA9ICcvdHdpcnAnO1xuZXhwb3J0IGNvbnN0IGxpdmVraXRQYWNrYWdlID0gJ2xpdmVraXQnO1xuLyoqXG4gKiBKU09OIGJhc2VkIFR3aXJwIFY3IFJQQ1xuICovXG5leHBvcnQgY2xhc3MgVHdpcnBScGMge1xuICAgIGNvbnN0cnVjdG9yKGhvc3QsIHBrZywgcHJlZml4KSB7XG4gICAgICAgIGlmIChob3N0LnN0YXJ0c1dpdGgoJ3dzJykpIHtcbiAgICAgICAgICAgIGhvc3QgPSBob3N0LnJlcGxhY2UoJ3dzJywgJ2h0dHAnKTtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLmhvc3QgPSBob3N0O1xuICAgICAgICB0aGlzLnBrZyA9IHBrZztcbiAgICAgICAgdGhpcy5wcmVmaXggPSBwcmVmaXggfHwgZGVmYXVsdFByZWZpeDtcbiAgICB9XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBhc3luYyByZXF1ZXN0KHNlcnZpY2UsIG1ldGhvZCwgZGF0YSwgaGVhZGVycykge1xuICAgICAgICBjb25zdCBwYXRoID0gYCR7dGhpcy5wcmVmaXh9LyR7dGhpcy5wa2d9LiR7c2VydmljZX0vJHttZXRob2R9YDtcbiAgICAgICAgY29uc3QgdXJsID0gbmV3IFVSTChwYXRoLCB0aGlzLmhvc3QpO1xuICAgICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKHVybCwge1xuICAgICAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgICAgICBoZWFkZXJzOiBPYmplY3QuYXNzaWduKHsgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9VVRGLTgnIH0sIGhlYWRlcnMpLFxuICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXG4gICAgICAgIH0pO1xuICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFJlcXVlc3QgZmFpbGVkIHdpdGggc3RhdHVzICR7cmVzcG9uc2Uuc3RhdHVzfTogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHBhcnNlZFJlc3AgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgICAgIHJldHVybiBjYW1lbGNhc2VLZXlzKHBhcnNlZFJlc3AsIHsgZGVlcDogdHJ1ZSB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1Ud2lycFJQQy5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/TwirpRPC.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/WebhookReceiver.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/WebhookReceiver.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   WebhookEvent: () => (/* binding */ WebhookEvent),\n/* harmony export */   WebhookReceiver: () => (/* binding */ WebhookReceiver),\n/* harmony export */   authorizeHeader: () => (/* binding */ authorizeHeader)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/.pnpm/@livekit+protocol@1.27.1/node_modules/@livekit/protocol/src/index.js\");\n/* harmony import */ var _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AccessToken.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/AccessToken.js\");\n\n\nconst authorizeHeader = 'Authorize';\nclass WebhookEvent extends _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.WebhookEvent {\n    constructor() {\n        super(...arguments);\n        this.event = '';\n    }\n    static fromBinary(bytes, options) {\n        return new WebhookEvent().fromBinary(bytes, options);\n    }\n    static fromJson(jsonValue, options) {\n        return new WebhookEvent().fromJson(jsonValue, options);\n    }\n    static fromJsonString(jsonString, options) {\n        return new WebhookEvent().fromJsonString(jsonString, options);\n    }\n}\nclass WebhookReceiver {\n    constructor(apiKey, apiSecret) {\n        this.verifier = new _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__.TokenVerifier(apiKey, apiSecret);\n    }\n    /**\n     * @param body - string of the posted body\n     * @param authHeader - `Authorization` header from the request\n     * @param skipAuth - true to skip auth validation\n     * @returns\n     */\n    async receive(body, authHeader, skipAuth = false) {\n        // verify token\n        if (!skipAuth) {\n            if (!authHeader) {\n                throw new Error('authorization header is empty');\n            }\n            const claims = await this.verifier.verify(authHeader);\n            // confirm sha\n            const encoder = new TextEncoder();\n            const hash = await crypto.subtle.digest('SHA-256', encoder.encode(body));\n            const hashDecoded = btoa(Array.from(new Uint8Array(hash))\n                .map((v) => String.fromCharCode(v))\n                .join(''));\n            if (claims.sha256 !== hashDecoded) {\n                throw new Error('sha256 checksum of body does not match');\n            }\n        }\n        return WebhookEvent.fromJson(JSON.parse(body), { ignoreUnknownFields: true });\n    }\n}\n//# sourceMappingURL=WebhookReceiver.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuNy4zL25vZGVfbW9kdWxlcy9saXZla2l0LXNlcnZlci1zZGsvZGlzdC9XZWJob29rUmVjZWl2ZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBc0U7QUFDckI7QUFDMUM7QUFDQSwyQkFBMkIsMkRBQWlCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsNEJBQTRCLDBEQUFhO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlEQUF5RCwyQkFBMkI7QUFDcEY7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGxheWdyb3VuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9saXZla2l0LXNlcnZlci1zZGtAMi43LjMvbm9kZV9tb2R1bGVzL2xpdmVraXQtc2VydmVyLXNkay9kaXN0L1dlYmhvb2tSZWNlaXZlci5qcz9lNDlkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFdlYmhvb2tFdmVudCBhcyBQcm90b1dlYmhvb2tFdmVudCB9IGZyb20gJ0BsaXZla2l0L3Byb3RvY29sJztcbmltcG9ydCB7IFRva2VuVmVyaWZpZXIgfSBmcm9tICcuL0FjY2Vzc1Rva2VuLmpzJztcbmV4cG9ydCBjb25zdCBhdXRob3JpemVIZWFkZXIgPSAnQXV0aG9yaXplJztcbmV4cG9ydCBjbGFzcyBXZWJob29rRXZlbnQgZXh0ZW5kcyBQcm90b1dlYmhvb2tFdmVudCB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIHRoaXMuZXZlbnQgPSAnJztcbiAgICB9XG4gICAgc3RhdGljIGZyb21CaW5hcnkoYnl0ZXMsIG9wdGlvbnMpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBXZWJob29rRXZlbnQoKS5mcm9tQmluYXJ5KGJ5dGVzLCBvcHRpb25zKTtcbiAgICB9XG4gICAgc3RhdGljIGZyb21Kc29uKGpzb25WYWx1ZSwgb3B0aW9ucykge1xuICAgICAgICByZXR1cm4gbmV3IFdlYmhvb2tFdmVudCgpLmZyb21Kc29uKGpzb25WYWx1ZSwgb3B0aW9ucyk7XG4gICAgfVxuICAgIHN0YXRpYyBmcm9tSnNvblN0cmluZyhqc29uU3RyaW5nLCBvcHRpb25zKSB7XG4gICAgICAgIHJldHVybiBuZXcgV2ViaG9va0V2ZW50KCkuZnJvbUpzb25TdHJpbmcoanNvblN0cmluZywgb3B0aW9ucyk7XG4gICAgfVxufVxuZXhwb3J0IGNsYXNzIFdlYmhvb2tSZWNlaXZlciB7XG4gICAgY29uc3RydWN0b3IoYXBpS2V5LCBhcGlTZWNyZXQpIHtcbiAgICAgICAgdGhpcy52ZXJpZmllciA9IG5ldyBUb2tlblZlcmlmaWVyKGFwaUtleSwgYXBpU2VjcmV0KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogQHBhcmFtIGJvZHkgLSBzdHJpbmcgb2YgdGhlIHBvc3RlZCBib2R5XG4gICAgICogQHBhcmFtIGF1dGhIZWFkZXIgLSBgQXV0aG9yaXphdGlvbmAgaGVhZGVyIGZyb20gdGhlIHJlcXVlc3RcbiAgICAgKiBAcGFyYW0gc2tpcEF1dGggLSB0cnVlIHRvIHNraXAgYXV0aCB2YWxpZGF0aW9uXG4gICAgICogQHJldHVybnNcbiAgICAgKi9cbiAgICBhc3luYyByZWNlaXZlKGJvZHksIGF1dGhIZWFkZXIsIHNraXBBdXRoID0gZmFsc2UpIHtcbiAgICAgICAgLy8gdmVyaWZ5IHRva2VuXG4gICAgICAgIGlmICghc2tpcEF1dGgpIHtcbiAgICAgICAgICAgIGlmICghYXV0aEhlYWRlcikge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignYXV0aG9yaXphdGlvbiBoZWFkZXIgaXMgZW1wdHknKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGNsYWltcyA9IGF3YWl0IHRoaXMudmVyaWZpZXIudmVyaWZ5KGF1dGhIZWFkZXIpO1xuICAgICAgICAgICAgLy8gY29uZmlybSBzaGFcbiAgICAgICAgICAgIGNvbnN0IGVuY29kZXIgPSBuZXcgVGV4dEVuY29kZXIoKTtcbiAgICAgICAgICAgIGNvbnN0IGhhc2ggPSBhd2FpdCBjcnlwdG8uc3VidGxlLmRpZ2VzdCgnU0hBLTI1NicsIGVuY29kZXIuZW5jb2RlKGJvZHkpKTtcbiAgICAgICAgICAgIGNvbnN0IGhhc2hEZWNvZGVkID0gYnRvYShBcnJheS5mcm9tKG5ldyBVaW50OEFycmF5KGhhc2gpKVxuICAgICAgICAgICAgICAgIC5tYXAoKHYpID0+IFN0cmluZy5mcm9tQ2hhckNvZGUodikpXG4gICAgICAgICAgICAgICAgLmpvaW4oJycpKTtcbiAgICAgICAgICAgIGlmIChjbGFpbXMuc2hhMjU2ICE9PSBoYXNoRGVjb2RlZCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignc2hhMjU2IGNoZWNrc3VtIG9mIGJvZHkgZG9lcyBub3QgbWF0Y2gnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gV2ViaG9va0V2ZW50LmZyb21Kc29uKEpTT04ucGFyc2UoYm9keSksIHsgaWdub3JlVW5rbm93bkZpZWxkczogdHJ1ZSB9KTtcbiAgICB9XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1XZWJob29rUmVjZWl2ZXIuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/WebhookReceiver.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/grants.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/grants.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   claimsToJwtPayload: () => (/* binding */ claimsToJwtPayload),\n/* harmony export */   trackSourceToString: () => (/* binding */ trackSourceToString)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/.pnpm/@livekit+protocol@1.27.1/node_modules/@livekit/protocol/src/index.js\");\n// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\n\nfunction trackSourceToString(source) {\n    switch (source) {\n        case _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource.CAMERA:\n            return 'camera';\n        case _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource.MICROPHONE:\n            return 'microphone';\n        case _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource.SCREEN_SHARE:\n            return 'screen_share';\n        case _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource.SCREEN_SHARE_AUDIO:\n            return 'screen_share_audio';\n        default:\n            throw new TypeError(`Cannot convert TrackSource ${source} to string`);\n    }\n}\nfunction claimsToJwtPayload(grant) {\n    var _a;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const claim = Object.assign({}, grant);\n    // eslint-disable-next-line no-restricted-syntax\n    if (Array.isArray((_a = claim.video) === null || _a === void 0 ? void 0 : _a.canPublishSources)) {\n        claim.video.canPublishSources = claim.video.canPublishSources.map(trackSourceToString);\n    }\n    return claim;\n}\n//# sourceMappingURL=grants.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuNy4zL25vZGVfbW9kdWxlcy9saXZla2l0LXNlcnZlci1zZGsvZGlzdC9ncmFudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ2dEO0FBQ3pDO0FBQ1A7QUFDQSxhQUFhLDBEQUFXO0FBQ3hCO0FBQ0EsYUFBYSwwREFBVztBQUN4QjtBQUNBLGFBQWEsMERBQVc7QUFDeEI7QUFDQSxhQUFhLDBEQUFXO0FBQ3hCO0FBQ0E7QUFDQSw4REFBOEQsUUFBUTtBQUN0RTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0Esa0NBQWtDO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGxheWdyb3VuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9saXZla2l0LXNlcnZlci1zZGtAMi43LjMvbm9kZV9tb2R1bGVzL2xpdmVraXQtc2VydmVyLXNkay9kaXN0L2dyYW50cy5qcz9iYjVhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIFNQRFgtRmlsZUNvcHlyaWdodFRleHQ6IDIwMjQgTGl2ZUtpdCwgSW5jLlxuLy9cbi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBcGFjaGUtMi4wXG5pbXBvcnQgeyBUcmFja1NvdXJjZSB9IGZyb20gJ0BsaXZla2l0L3Byb3RvY29sJztcbmV4cG9ydCBmdW5jdGlvbiB0cmFja1NvdXJjZVRvU3RyaW5nKHNvdXJjZSkge1xuICAgIHN3aXRjaCAoc291cmNlKSB7XG4gICAgICAgIGNhc2UgVHJhY2tTb3VyY2UuQ0FNRVJBOlxuICAgICAgICAgICAgcmV0dXJuICdjYW1lcmEnO1xuICAgICAgICBjYXNlIFRyYWNrU291cmNlLk1JQ1JPUEhPTkU6XG4gICAgICAgICAgICByZXR1cm4gJ21pY3JvcGhvbmUnO1xuICAgICAgICBjYXNlIFRyYWNrU291cmNlLlNDUkVFTl9TSEFSRTpcbiAgICAgICAgICAgIHJldHVybiAnc2NyZWVuX3NoYXJlJztcbiAgICAgICAgY2FzZSBUcmFja1NvdXJjZS5TQ1JFRU5fU0hBUkVfQVVESU86XG4gICAgICAgICAgICByZXR1cm4gJ3NjcmVlbl9zaGFyZV9hdWRpbyc7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKGBDYW5ub3QgY29udmVydCBUcmFja1NvdXJjZSAke3NvdXJjZX0gdG8gc3RyaW5nYCk7XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGNsYWltc1RvSnd0UGF5bG9hZChncmFudCkge1xuICAgIHZhciBfYTtcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuICAgIGNvbnN0IGNsYWltID0gT2JqZWN0LmFzc2lnbih7fSwgZ3JhbnQpO1xuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1yZXN0cmljdGVkLXN5bnRheFxuICAgIGlmIChBcnJheS5pc0FycmF5KChfYSA9IGNsYWltLnZpZGVvKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2EuY2FuUHVibGlzaFNvdXJjZXMpKSB7XG4gICAgICAgIGNsYWltLnZpZGVvLmNhblB1Ymxpc2hTb3VyY2VzID0gY2xhaW0udmlkZW8uY2FuUHVibGlzaFNvdXJjZXMubWFwKHRyYWNrU291cmNlVG9TdHJpbmcpO1xuICAgIH1cbiAgICByZXR1cm4gY2xhaW07XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1ncmFudHMuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/grants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/index.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/index.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AccessToken: () => (/* reexport safe */ _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__.AccessToken),\n/* harmony export */   AliOSSUpload: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AliOSSUpload),\n/* harmony export */   AutoParticipantEgress: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AutoParticipantEgress),\n/* harmony export */   AutoTrackEgress: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AutoTrackEgress),\n/* harmony export */   AzureBlobUpload: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.AzureBlobUpload),\n/* harmony export */   DataPacket_Kind: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DataPacket_Kind),\n/* harmony export */   DirectFileOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.DirectFileOutput),\n/* harmony export */   EgressClient: () => (/* reexport safe */ _EgressClient_js__WEBPACK_IMPORTED_MODULE_2__.EgressClient),\n/* harmony export */   EgressInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressInfo),\n/* harmony export */   EgressStatus: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EgressStatus),\n/* harmony export */   EncodedFileOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EncodedFileOutput),\n/* harmony export */   EncodedFileType: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EncodedFileType),\n/* harmony export */   EncodingOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EncodingOptions),\n/* harmony export */   EncodingOptionsPreset: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.EncodingOptionsPreset),\n/* harmony export */   GCPUpload: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.GCPUpload),\n/* harmony export */   ImageCodec: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ImageCodec),\n/* harmony export */   ImageFileSuffix: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ImageFileSuffix),\n/* harmony export */   ImageOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ImageOutput),\n/* harmony export */   IngressAudioEncodingOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressAudioEncodingOptions),\n/* harmony export */   IngressAudioEncodingPreset: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressAudioEncodingPreset),\n/* harmony export */   IngressAudioOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressAudioOptions),\n/* harmony export */   IngressClient: () => (/* reexport safe */ _IngressClient_js__WEBPACK_IMPORTED_MODULE_4__.IngressClient),\n/* harmony export */   IngressInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInfo),\n/* harmony export */   IngressInput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressInput),\n/* harmony export */   IngressState: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressState),\n/* harmony export */   IngressVideoEncodingOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressVideoEncodingOptions),\n/* harmony export */   IngressVideoEncodingPreset: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressVideoEncodingPreset),\n/* harmony export */   IngressVideoOptions: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.IngressVideoOptions),\n/* harmony export */   ParticipantEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantEgressRequest),\n/* harmony export */   ParticipantInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantInfo),\n/* harmony export */   ParticipantInfo_State: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantInfo_State),\n/* harmony export */   ParticipantPermission: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.ParticipantPermission),\n/* harmony export */   Room: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.Room),\n/* harmony export */   RoomCompositeEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomCompositeEgressRequest),\n/* harmony export */   RoomEgress: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.RoomEgress),\n/* harmony export */   RoomServiceClient: () => (/* reexport safe */ _RoomServiceClient_js__WEBPACK_IMPORTED_MODULE_5__.RoomServiceClient),\n/* harmony export */   S3Upload: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.S3Upload),\n/* harmony export */   SIPDispatchRuleInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPDispatchRuleInfo),\n/* harmony export */   SIPParticipantInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPParticipantInfo),\n/* harmony export */   SIPTrunkInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SIPTrunkInfo),\n/* harmony export */   SegmentedFileOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SegmentedFileOutput),\n/* harmony export */   SegmentedFileProtocol: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.SegmentedFileProtocol),\n/* harmony export */   SipClient: () => (/* reexport safe */ _SipClient_js__WEBPACK_IMPORTED_MODULE_6__.SipClient),\n/* harmony export */   StreamOutput: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.StreamOutput),\n/* harmony export */   StreamProtocol: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.StreamProtocol),\n/* harmony export */   TokenVerifier: () => (/* reexport safe */ _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__.TokenVerifier),\n/* harmony export */   TrackCompositeEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackCompositeEgressRequest),\n/* harmony export */   TrackEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackEgressRequest),\n/* harmony export */   TrackInfo: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackInfo),\n/* harmony export */   TrackSource: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackSource),\n/* harmony export */   TrackType: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.TrackType),\n/* harmony export */   WebEgressRequest: () => (/* reexport safe */ _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__.WebEgressRequest),\n/* harmony export */   WebhookEvent: () => (/* reexport safe */ _WebhookReceiver_js__WEBPACK_IMPORTED_MODULE_7__.WebhookEvent),\n/* harmony export */   WebhookReceiver: () => (/* reexport safe */ _WebhookReceiver_js__WEBPACK_IMPORTED_MODULE_7__.WebhookReceiver),\n/* harmony export */   authorizeHeader: () => (/* reexport safe */ _WebhookReceiver_js__WEBPACK_IMPORTED_MODULE_7__.authorizeHeader),\n/* harmony export */   claimsToJwtPayload: () => (/* reexport safe */ _grants_js__WEBPACK_IMPORTED_MODULE_3__.claimsToJwtPayload),\n/* harmony export */   trackSourceToString: () => (/* reexport safe */ _grants_js__WEBPACK_IMPORTED_MODULE_3__.trackSourceToString)\n/* harmony export */ });\n/* harmony import */ var _livekit_protocol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @livekit/protocol */ \"(rsc)/./node_modules/.pnpm/@livekit+protocol@1.27.1/node_modules/@livekit/protocol/src/index.js\");\n/* harmony import */ var _AccessToken_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AccessToken.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/AccessToken.js\");\n/* harmony import */ var _EgressClient_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./EgressClient.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/EgressClient.js\");\n/* harmony import */ var _grants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./grants.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/grants.js\");\n/* harmony import */ var _IngressClient_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./IngressClient.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/IngressClient.js\");\n/* harmony import */ var _RoomServiceClient_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./RoomServiceClient.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/RoomServiceClient.js\");\n/* harmony import */ var _SipClient_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./SipClient.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/SipClient.js\");\n/* harmony import */ var _WebhookReceiver_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./WebhookReceiver.js */ \"(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/WebhookReceiver.js\");\n// SPDX-FileCopyrightText: 2024 LiveKit, Inc.\n//\n// SPDX-License-Identifier: Apache-2.0\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGl2ZWtpdC1zZXJ2ZXItc2RrQDIuNy4zL25vZGVfbW9kdWxlcy9saXZla2l0LXNlcnZlci1zZGsvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNzMkI7QUFDcjBCO0FBQ0M7QUFDTjtBQUNPO0FBQ0k7QUFDUjtBQUNNO0FBQ3JDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcGxheWdyb3VuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9saXZla2l0LXNlcnZlci1zZGtAMi43LjMvbm9kZV9tb2R1bGVzL2xpdmVraXQtc2VydmVyLXNkay9kaXN0L2luZGV4LmpzPzVkMjMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU1BEWC1GaWxlQ29weXJpZ2h0VGV4dDogMjAyNCBMaXZlS2l0LCBJbmMuXG4vL1xuLy8gU1BEWC1MaWNlbnNlLUlkZW50aWZpZXI6IEFwYWNoZS0yLjBcbmV4cG9ydCB7IEFsaU9TU1VwbG9hZCwgQXV0b1BhcnRpY2lwYW50RWdyZXNzLCBBdXRvVHJhY2tFZ3Jlc3MsIEF6dXJlQmxvYlVwbG9hZCwgRGF0YVBhY2tldF9LaW5kLCBEaXJlY3RGaWxlT3V0cHV0LCBFZ3Jlc3NJbmZvLCBFZ3Jlc3NTdGF0dXMsIEVuY29kZWRGaWxlT3V0cHV0LCBFbmNvZGVkRmlsZVR5cGUsIEVuY29kaW5nT3B0aW9ucywgRW5jb2RpbmdPcHRpb25zUHJlc2V0LCBHQ1BVcGxvYWQsIEltYWdlQ29kZWMsIEltYWdlRmlsZVN1ZmZpeCwgSW1hZ2VPdXRwdXQsIEluZ3Jlc3NBdWRpb0VuY29kaW5nT3B0aW9ucywgSW5ncmVzc0F1ZGlvRW5jb2RpbmdQcmVzZXQsIEluZ3Jlc3NBdWRpb09wdGlvbnMsIEluZ3Jlc3NJbmZvLCBJbmdyZXNzSW5wdXQsIEluZ3Jlc3NTdGF0ZSwgSW5ncmVzc1ZpZGVvRW5jb2RpbmdPcHRpb25zLCBJbmdyZXNzVmlkZW9FbmNvZGluZ1ByZXNldCwgSW5ncmVzc1ZpZGVvT3B0aW9ucywgUGFydGljaXBhbnRFZ3Jlc3NSZXF1ZXN0LCBQYXJ0aWNpcGFudEluZm8sIFBhcnRpY2lwYW50SW5mb19TdGF0ZSwgUGFydGljaXBhbnRQZXJtaXNzaW9uLCBSb29tLCBSb29tQ29tcG9zaXRlRWdyZXNzUmVxdWVzdCwgUm9vbUVncmVzcywgUzNVcGxvYWQsIFNJUERpc3BhdGNoUnVsZUluZm8sIFNJUFBhcnRpY2lwYW50SW5mbywgU0lQVHJ1bmtJbmZvLCBTZWdtZW50ZWRGaWxlT3V0cHV0LCBTZWdtZW50ZWRGaWxlUHJvdG9jb2wsIFN0cmVhbU91dHB1dCwgU3RyZWFtUHJvdG9jb2wsIFRyYWNrQ29tcG9zaXRlRWdyZXNzUmVxdWVzdCwgVHJhY2tFZ3Jlc3NSZXF1ZXN0LCBUcmFja0luZm8sIFRyYWNrU291cmNlLCBUcmFja1R5cGUsIFdlYkVncmVzc1JlcXVlc3QsIH0gZnJvbSAnQGxpdmVraXQvcHJvdG9jb2wnO1xuZXhwb3J0ICogZnJvbSAnLi9BY2Nlc3NUb2tlbi5qcyc7XG5leHBvcnQgKiBmcm9tICcuL0VncmVzc0NsaWVudC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL2dyYW50cy5qcyc7XG5leHBvcnQgKiBmcm9tICcuL0luZ3Jlc3NDbGllbnQuanMnO1xuZXhwb3J0ICogZnJvbSAnLi9Sb29tU2VydmljZUNsaWVudC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL1NpcENsaWVudC5qcyc7XG5leHBvcnQgKiBmcm9tICcuL1dlYmhvb2tSZWNlaXZlci5qcyc7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1pbmRleC5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/livekit-server-sdk@2.7.3/node_modules/livekit-server-sdk/dist/index.js\n");

/***/ })

};
;